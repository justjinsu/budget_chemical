[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "kpetchem-budget"
version = "2.0.0"
description = "Korean Petrochemical Carbon Budget Allocation Toolkit with Monte Carlo Simulation"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Korean Petrochemical Carbon Budget Team", email = "kpetchem@example.com"}
]
keywords = ["carbon", "budget", "petrochemical", "monte-carlo", "emissions", "korea"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
requires-python = ">=3.11"

dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "matplotlib>=3.6.0",
    "plotly>=5.14.0",
    "streamlit>=1.25.0",
    "pyarrow>=12.0.0",
    "fastparquet>=2023.4.0",
    "numba>=0.57.0",
    "joblib>=1.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.3.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=2.0.0",
]
performance = [
    "dask[complete]>=2023.5.0",
    "ray[default]>=2.4.0",
    "polars>=0.18.0",
]

[project.urls]
Homepage = "https://github.com/kpetchem/carbon-budget"
Documentation = "https://kpetchem-budget.readthedocs.io"
Repository = "https://github.com/kpetchem/carbon-budget.git"
"Bug Tracker" = "https://github.com/kpetchem/carbon-budget/issues"

[project.scripts]
kpetchem-dashboard = "kpetchem_budget.dashboard.app:main"
kpetchem-simulate = "kpetchem_budget.simulator:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["kpetchem_budget*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
kpetchem_budget = [
    "sample_data/*.csv",
    "dashboard/*.py",
]

# Black code formatting
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["kpetchem_budget"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# mypy type checking
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "plotly.*",
    "streamlit.*",
    "pyarrow.*",
    "numba.*",
]
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["kpetchem_budget"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
    "*/dashboard/app.py",  # Streamlit app hard to test
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"